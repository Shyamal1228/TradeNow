<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, $window, $rootScope, $http) {

	var c = this;
	c.data.incidents = false;
	$scope.displayNumber = 8;  // Initially display 4 items	
	var totalItems=0;
	var index = 0;
	var itemsLoaded = 0;
	
	 c.getTotalItems = function() {
        $http.get('/api/now/table/x_1383179_tradenow_item_list?sysparm_count=true')
            .then(function(res) {
                var totalItems = res.data.result.length;
				//	console.log(res.data.result);
                c.getIncidents();  // Load initial items after getting the total count
            });
    };
	c.getTotalItems();
	c.getIncidents = function () {
		// added
		var limit = itemsLoaded === 0 ? 8 : 4;  // Load 10 items initially, then 4 items each time

        // Calculate remaining items to load
        var remainingItems = totalItems - itemsLoaded;
        if (remainingItems < limit) {
            limit = remainingItems;
        }
		var params = [
			'sysparm_fields=sys_id,lister_name,item_name,description,category,image,total_watchers,sys_created_on',
			'sysparm_offset=' + index * itemsLoaded,
			'sysparm_limit'+limit
		].join('&');

		$http.get('/api/now/table/x_1383179_tradenow_item_list?' + params)
			.then(function(res) {
				var data = res.data.result.slice();
			console.log(data);
	
			//extra
			for(var i=0;i<data.length;i++){
				res.data.result[i].category=res.data.result[i].category.value;
			}
			//console.log(res.data.result[0].category);
				c.data.incidents = c.data.incidents ? c.data.incidents.concat(data) : data;
				index++;
			
			itemsLoaded += data.length;

			if (data.length < limit || itemsLoaded >= totalItems) {
				// No more items to load
				$scope.loadPoint = false;
			}
			});
	};

	// Initial load
	//c.getIncidents();

	$scope.$watch('loadPoint', function() {
		if ($scope.loadPoint) {
			$scope.displayNumber += 4;
			c.getIncidents();

			setTimeout(function() {
				$scope.loadPoint = false;
			}, 1000);
		}
	});

	var emnt = document.getElementsByTagName('section')[0];

	$scope.loadPoint = false;

	$(emnt).on('scroll', function() {
		if (emnt.scrollHeight - emnt.scrollTop < 1200) {
			$scope.$apply(function() {
				$scope.loadPoint = true;
			});
		}
	});
	
	$scope.$watch('selectedCategory', function(newValue, oldValue) {
		if (newValue !== oldValue) {
			scrollToTop();
		}
	});
	$scope.$watch('searchText', function(newValue, oldValue) {
		if (newValue !== oldValue) {
			scrollToTop();
		}
	});
	function scrollToTop() {
		window.scrollTo({ top: 0, behavior: 'smooth' });
	}
	
	//clear serarch
	$scope.clearSearch = function(){
		$scope.searchText = "";
		$scope.searchKeyword = $scope.searchText;
		document.getElementById('search-bar').value = '';
	};
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>th {
  min-width: 12rem;
  margin: 2rem;
}

td {
  padding-top: 2rem;
}

.description {
  min-width: 20rem;
}

.mid {
  text-align: center;
}

.scrollable-container {
  height: 800px; /* Set your desired height */
  overflow-y: auto;
}

.main-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

.top-section {
    position: sticky;
    top: 0;
   // background-color: #f5d8c6;
    z-index: 1000;
    padding: 10px 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}
div.top-section{
  background-color: #006666;
}
.card-list-container {
    overflow-y: auto;
    flex: 1;
    padding-top: 10px;
}

.header{
  text-align: center;
  color: #004c4c;
}
.header&gt;h2{
  //font-weight: bold;
  color:#004c4c;
}
.header&gt;hr{
  border: none;
  height: 5px;
  width: 20%;
  background-color: #004c4c;
  margin-butom: 2px;
  margin-top: 0px;
}
h3{
  /*font-size: 1.375rem;
    color: #000000;
    margin-top: 0.5rem;
    line-height: 1.4;*/
  
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1; 
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
    //height: 3em;
  color:#000000;
}
.poppins-extralight {
  font-family: "Poppins", sans-serif;
  font-weight: 200;
  font-style: normal;
}

.poppins-light {
  font-family: "Poppins", sans-serif;
  font-weight: 300;
  font-style: normal;
}
.poppins-regular {
  font-family: "Poppins", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.poppins-semibold {
  font-family: "Poppins", sans-serif;
  font-weight: 600;
  font-style: normal;
}
*, *:after, *:before {
    box-sizing: border-box;
}

body {
    font-family: "Lexend", sans-serif;
    line-height: 1.5;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #393232;
    margin: 0;
    padding: 20px;
}

img {
    max-width: 100%;
    display: block;
} 

.card-list {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    width: 100%;
    justify-content: flex-start; /* Change to flex-start */
  	margin-bottom:25px;

}

.card {
    background-color: #fff;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, .05), 0 20px 50px 0 rgba(0, 0, 0, .1);
    border-radius: 15px;
    overflow: hidden;
    padding: 0.5rem; /* Reduced padding */
    position: relative;
    transition: .15s ease-in;
  flex: 1 1 calc(25% - 1rem); /* Adjusted for four items per row */
    max-width: calc(25% - 1rem); /* Adjusted for four items per row */

    border: 1px solid transparent;
    
    &amp;:hover, &amp;:focus-within {
       // box-shadow: 0 0 0 2px #16C79A, 0 10px 60px 0 rgba(0, 0, 0, .1);
        //transform: translateY(-5px);
        //border-color: #16C79A; /* Added green border on hover */
       -webkit-box-shadow: -1px 0px 12px 0px rgba(178, 216, 216,0.8);
-moz-box-shadow: -1px 0px 12px 0px rgba(178, 216, 216,0.8);
box-shadow: -1px 0px 12px 0px rgba(178, 216, 216,0.8);
 //box-shadow: -1px 3px 11px 0px rgba(0,0,0,0.75);
  //box-shadow:-3px 18px 20px 0px rgba(99,89,99,1);
  transform: translate3d(0px, -1px, 0px);
    }
}

.card-image {
   //	width: 250px;
    //height: 600px;
    border-radius: 10px;
    overflow: hidden;
    margin: 0.5rem 0; /* Reduced margin around image */
}

.card-image img {
   // width: 100%;
    //height: auto;
    //object-fit: cover; /* Ensure the image covers the container */
  	width: 100%; 
    height: 200px;
    object-fit: cover;
    border-radius:4px;
}

.card-header {
    margin-top: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    a {
        font-weight: 600;
        font-size: 1.375rem;
        line-height: 1.25;
        padding-right: 1rem;
        text-decoration: none;
        color: #000000;
        will-change: transform;
        position: relative;
        &amp;:after {
            content: "";
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
        }
    }
}

.card-description {
    font-size: 1.375rem;
    color: #000000;
    margin-top: 0.5rem;
    line-height: 1.4;
  
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2; 
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
    height: 3em;
}

.icon-button {
    border: 0;
    background-color: #fff;
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    font-size: 1.25rem;
    transition: .25s ease;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, .05), 0 3px 8px 0 rgba(0, 0, 0, .15);
    z-index: 1;
    cursor: pointer;
    color: #565656;
    
    svg {
        width: 1em;
        height: 1em;
    }
    &amp;:hover, &amp;:focus {
        background-color: #EC4646;
        color: #FFF;
    }
}

.card-footer {
    margin-top: 1.25rem;
    border-top: 1px solid #ddd;
    padding-top: 1.25rem;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
}

.card-meta {    
    display: flex;
    align-items: center;
    color: #787878;
    &amp;:first-child:after {
        display: block;
        content: "";
        width: 4px;
        height: 4px;
        border-radius: 50%;
        background-color: currentcolor;
        margin-left: .75rem;
        margin-right: .75rem;
    }
    svg {
        flex-shrink: 0;
        width: 1em;
        height: 1em;
        margin-right: .25em;
    }
}


@media (max-width: 950px) {
    .card {
        flex: 1 1 calc(33.33% - 1rem);
        max-width: calc(33.33% - 1rem);
    }
}

@media (max-width: 750px) {
    .card {
        flex: 1 1 calc(50% - 1rem);
    max-width: calc(50% - 1rem); 
    }
}

@media (max-width: 530px) {
    .card {
        flex: 1 1 100%; 
        max-width: 100%; 
    }
  .header&gt;hr{
    width: 40%;
  }
}

.card-content {
  padding: 1rem;
}

.card-action {
  padding: 1.5rem;
  text-align: center;
}

.view-item-button {
  display: inline-block;
  padding: 1.3rem 2.5rem;
  background-color: #008080;
  color: white;
  font-size: 1.4rem;
  //font-weight: bold;
  border: none;
  border-radius: 50px;
  box-shadow: 0 4px 8px rgba(0, 128, 128, 0.4);
  cursor: pointer;
  text-decoration: none;
}

.view-item-button:hover {
  background-color: #006666;
}


// category and search bar
.top-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #fff;
        color: #fff;
        //padding: 5px 20px 20px 0px;
  border-radius: 10px;
  margin-bottom:20px;
    }

.select-dropdown select {
  margin-right: 10px;
  color:#000000;
  padding: 0.8rem;
  border: 1px solid #ccc;
  border-radius: 25px;
  outline: none;
}

.search-box {
  margin-left: 10px;
  color:#000000;
}
input{
  color:#000000;
}
.search-box input{
  //width: 40%;
  padding: 1rem;
 // border: 1px solid #ccc;
  border-radius: 25px;
  outline: none;
  color:#000000;
  height:100%;
}

    @media screen and (max-width: 600px) {
        .top-section {
            flex-direction: column;
            align-items: stretch;
        }
        .search-box {
            margin-left: 0;
            margin-top: 10px;
        }
    }



// pagination
.pagination {
  display: flex;
  list-style-type: none;
  padding: 0;
}

.page-item {
  margin: 0 5px;
}

.page-link {
  display: block;
  padding: 10px 15px;
  text-decoration: none;
  color: #04364A;
  background-color: #fff;
  border: 1px solid #04364A;
  border-radius: 3px;
}

.page-link:hover {
  background-color: #04364A;
}

.page-item.active .page-link {
  background-color: #04364A;
  color: white;
  border-color: #04364A;
}

ul.dirPagination.ng-scope{
display: flex;
  justify-content: center;
  list-style-type: none;
  padding: 0;
  border-radius: 0.25rem;
  margin-top: 25px;
  margin-bottom: 20px;
}


// 1 2 3
/*a.ng-binding{
 display: block;
  padding: 10px 15px;
  text-decoration: none;
  color: #2fa14d;
  background-color: #fff;
  border: 1px solid #04364A;
  border-radius: 3px;
  margin: 0px 2.5px;
}
a.ng-binding:hover{
  background-color: #176B87;
  border-color: #04364A;
  color: #fff;
}
.ng-scope&gt;a{
 display: block;
  padding: 10px 15px;
  text-decoration: none;
  color: #176B87;
  background-color: #fff;
  border: 1px solid #04364A;
  border-radius: 3px;
  margin: 0px 5px
}
.ng-scope&gt;a:hover{
  background-color: #176B87;
  border-color: #04364A;
  color: #fff;
}*/

// delete after show and tell
.card-meta:first-child:after{
 background-color: #000;
}

.back-to-top {
  //display: none; /* Hidden by default */
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 1000;
  border: none; 
  outline: none;
  background-color: #176B87;
  color: white;
  cursor: pointer; 
  padding: 15px; 
  border-radius: 10px; 
  font-size: 18px;
}

.back-to-top:hover {
  background-color: #04364A;
}


/*button.back-to-top{
  margin: 0 !important;
  padding: 0 !important;
  background: #fff;
	height: 0px;
  width: 0px;
  overflow: hidden;
	border-radius: 50px;
	-webkit-border-radius: 50px;
	-moz-border-radius: 50px;
  color: transparent;
	clear: both;
  visibility: hidden;
  position: fixed;
  cursor: pointer;
  display: block;
  border: none;
  right: 50px;
	bottom: 75px;
  font-size: 0px;
  outline: 0 !important;
  z-index: 99;
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
}
button.back-to-top:hover,
button.back-to-top:active,
button.back-to-top:focus,{
  outline: 0 !important;
}
button.back-to-top::before,
button.back-to-top::after {
  content: "";
    display: block;
    vertical-align: middle;
    border-bottom: solid 10px #EA5D5F;
    border-left: solid 10px transparent;
    line-height: 0;
    border-right: solid 10px transparent;
    height: 0;
    margin: 18px auto 0;
    width: 0;
  border-radius:20px;
  visibility: hidden;
}
button.back-to-top.show::after,
button.back-to-top.show::before{
  visibility: visible;
}
button.back-to-top::after {
  border-bottom-color:#fff;
      position: relative;
  top:-24px;
}
button.back-to-top.show {
  display: block;
  background: #fff;
  color: #00ab6c;
  font-size: 25px;
  right: 25px;
	bottom: 50px;
  height: 50px;
  width: 50px;
  visibility: visible;
	box-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.25);
  -webkit-box-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.25);
  -moz-box-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.25);
}
button.back-to-top.show:active {
  box-shadow: 0px 4px 8px 2px rgba(0, 0, 0, 0.25);
  -webkit-box-shadow: 0px 4px 8px 2px rgba(0, 0, 0, 0.25);
  -moz-box-shadow: 0px 4px 8px 2px rgba(0, 0, 0, 0.25);
}*/


// search box
.search-box-container{
	width: 20%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 25px;
  //border: 2px solid #006060;
  background-color:#fff;
}

.search-bar-svg{
	height: 100%;
  width: 20%;
  padding: 2%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.search-bar-svg svg{
	width: 70%;
  height: 70%;
  margin-left:5px;
}

.search-box-container &gt; input{
	height: 100%;
  width: 100%;
  border: none;
  padding-left: 10px;
  color:#000;
}

.search-box-container &gt; input:focus{
	box-shadow: none;
  outline: none;
}
.cross{
  width:16%;
  margin-right:5px;
}

// Item not found
.no-items-found {
  width: 100% !important;
  height: 100% !important;
  display: flex !important;
  flex-direction: column;
  align-items: center !important;
  justify-content: center !important;
  font-size: 1.5rem !important;
  color: black !important; /* Adjust color as needed */
}

.no-items-found img{
	width: 20%;
  height: 20%;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>lazy_loading_extra_scroll</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
	
}]]></link>
        <name>Lazy Loading Extra scroll</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.table = 'x_1383179_tradenow_item_list';
	data.items = [];
  var gr = new GlideRecord(data.table);
	gr.orderByDesc('sys_created_on');
	//gr.setLimit(4);
  gr.query();
	while (gr.next()) {
		var obj={
			sys_id:gr.getValue('sys_id'),
			name:gr.getValue('item_name'),
			description:gr.getValue('description'),
			category:gr.getValue('category'),
			//added
			created_on:gr.getValue('sys_created_on').toString().substring(0, 10),
			//
			//image_url: null
			image_url: gr.getDisplayValue('image'),
			watching: gr.getValue('total_watchers')
		};
		//added
/*var inputDate = obj.created_on;
var parsedDate = new GlideDateTime(inputDate);
var monthAbbreviation = parsedDate.getDayOfMonthUTC();
var dayOfMonth = parsedDate.getDayOfMonth();
var year = parsedDate.getYear();

var formattedDate = monthAbbreviation + " " + dayOfMonth + ", " + year;
obj.date=formattedDate;
gs.info("Formatted Date: " + formattedDate);*/

		
		
		/*var attachmentGr = new GlideRecord('sys_attachment');
		attachmentGr.addQuery('table_sys_id', gr.getUniqueValue());
		attachmentGr.query();

		if (attachmentGr.next()) {
			obj.image_url = '/sys_attachment.do?sys_id=' + attachmentGr.getValue('sys_id');
		}*/
		data.items.push(obj);
     // data.items.push(gr.getValue('number')); // assuming 'number' is the field you want to print
    }
	 //console.log(data.items);
	
	data.categoryArray = [];
  var categoryList = new GlideRecord('x_1383179_tradenow_category_lookup');
	categoryList.query();
	while (categoryList.next()) {
		
		var catObj={
			name:categoryList.getValue('name'),
			sys_id:categoryList.getValue('sys_id'),
		};
		data.categoryArray.push(catObj);
		//data.categoryArray.push(categoryList.getValue('name'));
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>shyamal</sys_created_by>
        <sys_created_on>2024-06-15 20:14:15</sys_created_on>
        <sys_id>da6aeef583b64a10edb56060ceaad3e7</sys_id>
        <sys_mod_count>320</sys_mod_count>
        <sys_name>Lazy Loading Extra scroll</sys_name>
        <sys_package display_value="TradeNow" source="x_1383179_tradenow">48d5320c837d0610edb56060ceaad314</sys_package>
        <sys_policy/>
        <sys_scope display_value="TradeNow">48d5320c837d0610edb56060ceaad314</sys_scope>
        <sys_update_name>sp_widget_da6aeef583b64a10edb56060ceaad3e7</sys_update_name>
        <sys_updated_by>shyamal</sys_updated_by>
        <sys_updated_on>2024-06-27 06:57:37</sys_updated_on>
        <template><![CDATA[<style>
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;600&display=swap');
</style>
<div class="header" >
    <h2 class="poppins-semibold">All Items</h2>
    <hr/>
  </div>
<div class="main-container">
<div class="top-section">
    <div class="select-dropdown poppins-regular">
        <select class="select" ng-model="selectedCategory" ng-options="category.name for category in data.categoryArray">
            <option value="">Select Category</option>
        </select>
    </div>
      
    <!--<div class="search-box">
        <input type="text" ng-model="searchText" placeholder="Search for items...">
    </div>-->
  
  <div class="search-box-container search-box poppins-regular">
    <div class="search-bar-svg"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"/></svg></div>
    <input type="text" placeholder="Search for items..." ng-model="searchText" ng-keyup="checkEnterKey($event)" id="search-bar">
    <div class="search-bar-svg cross" ng-click="clearSearch()"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M376.6 84.5c11.3-13.6 9.5-33.8-4.1-45.1s-33.8-9.5-45.1 4.1L192 206 56.6 43.5C45.3 29.9 25.1 28.1 11.5 39.4S-3.9 70.9 7.4 84.5L150.3 256 7.4 427.5c-11.3 13.6-9.5 33.8 4.1 45.1s33.8 9.5 45.1-4.1L192 306 327.4 468.5c11.3 13.6 31.5 15.4 45.1 4.1s15.4-31.5 4.1-45.1L233.7 256 376.6 84.5z"/></svg></div>
  </div>
</div>

<div class="card-list">
    <!--<article class="card" ng-repeat="incident in c.data.incidents |filter: {category: selectedCategory.sys_id} | filter: {name: searchText} | limitTo: displayNumber">-->
  <article class="card" ng-repeat="incident in c.data.incidents | filter: {category: selectedCategory.sys_id} | filter: {item_name:searchText} | limitTo: displayNumber">
    
      <figure class="card-image">
           <!-- <img ng-src="{{ incident.image Url }}" alt="Incident Image" class="incident-image" /> -->
         
          <img ng-src="sys_attachment.do?sys_id={{incident.image}}" alt="Incident Image" class="incident-image" />
      </figure>
        <div class="card-header">
            <h3 class="poppins-regular" ng-bind-html="::incident.item_name"></h3>
            <!--<button class="icon-button">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" display="block" id="Heart">
                    <path d="M7 3C4.239 3 2 5.216 2 7.95c0 2.207.875 7.445 9.488 12.74a.985.985 0 0 0 1.024 0C21.125 15.395 22 10.157 22 7.95 22 5.216 19.761 3 17 3s-5 3-5 3-2.239-3-5-3z" />
                </svg>
            </button>-->
        </div>
        <!--<div class="card-description poppins-regular" ng-bind-html="::incident.description"></div>-->
        <div class="card-footer">
            <div class="card-meta card-meta--views">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" display="block" id="EyeOpen">
                    <path d="M21.257 10.962c.474.62.474 1.457 0 2.076C19.764 14.987 16.182 19 12 19c-4.182 0-7.764-4.013-9.257-5.962a1.692 1.692 0 0 1 0-2.076C4.236 9.013 7.818 5 12 5c4.182 0 7.764 4.013 9.257 5.962z" />
                    <circle cx="12" cy="12" r="3" />
                </svg>
							{{incident.total_watchers}}
            </div>
            <div class="card-meta card-meta--date">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" display="block" id="Calendar">
                    <rect x="2" y="4" width="20" height="18" rx="4" />
                    <path d="M8 2v4" />
                    <path d="M16 2v4" />
                    <path d="M2 10h20" />
                </svg>
                <!--Jul 26, 2019-->
              {{::incident.sys_created_on.toString().substr(0,10)}}
            </div>
        </div>
      <div class="card-action">
        <a href="/tradenow?id=item_details&table=x_1383179_tradenow_item_list&sys_id={{::incident.sys_id}}"><button class="view-item-button poppins-light">View Item</button></a>
        </div>
    </article>
  
  <div class="no-items-found" ng-if='!(c.data.incidents | filter: {category: selectedCategory.sys_id} |filter:{item_name:searchText}).length'>
    <img src="https://img.freepik.com/premium-vector/hand-drawn-no-data-illustration_23-2150696443.jpg"/>
    No Items Found
  </div>
    <!-- Repeat other cards with similar structure -->
</div>
</div>

<!-- Back to Top Button -->
<!--<div class="contentDiv" id="content">

<button class="back-to-top" type="button"></button>
</div>

<script>
  // Back to top
var amountScrolled = 200;
var amountScrolledNav = 25;

$(window).scroll(function() {
  if ( $(window).scrollTop() > amountScrolled ) {
    $('button.back-to-top').addClass('show');
  } else {
    $('button.back-to-top').removeClass('show');
  }
});

$('button.back-to-top').click(function() {
  $('html, body').animate({
    scrollTop: 0
  }, 800);
  return false;
});
</script>-->
<!--No edit-->
<!--No edit-->]]></template>
    </sp_widget>
</record_update>
