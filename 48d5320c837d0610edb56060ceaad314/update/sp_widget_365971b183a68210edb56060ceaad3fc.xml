<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,$http) {
  /* widget controller */
  var c = this;
	
	// CODE FOR input record
	$scope.getID = function(rec) {
		c.data.record = rec.toString(); // sys id of the record
		c.server.update();
	}	
	
	// CODE FOR file upload
	$scope.files = [];	
	$scope.setFiles = function(element) {
		$scope.$apply(function() {
			console.log('files:', element.files);
			// Turn the FileList object into an Array
			for (var i = 0; i < element.files.length; i++) {
				$scope.files.push(element.files[i]);
			}
		});
		alert('ss: ' + JSON.stringify($scope.files));
	};
	
	$scope.removeFiles = function(fname) {
		var index = $scope.files.indexOf(fname);
		if(index>-1)
			$scope.files.splice(index,1);
	};	
	$scope.uploadFiles = function() {	
		$scope.fd = new FormData();
		if ($scope.files.length === 0) {
			alert("No file selected for upload.");
			return;
		}
		var file = $scope.files[0];
		$scope.fd.append('file', file);
		var request = {
			method: 'POST',
			url: 'https://dev200524.service-now.com/api/now/attachment/file?table_name='+c.data.table+'&table_sys_id='+c.data.rec_sysid+'&file_name='+file.name,
			data: $scope.fd.get('file'),
			headers: {
				'Content-Type': file.type, // Let the browser set the Content-Type including the boundary
				'Accept': 'application/json'
			},
			transformRequest: angular.identity // Use angular.identity to send FormData
		};
		$http(request)
			.then(function (response) {
				var d = response.data;
				var attaSysId = d.result.sys_id;
				alert("sys_id: " + attaSysId);
				c.data.attchSysId = attaSysId;
				c.server.update();
			})
			.catch(function (err) {
				alert("Error uploading file.");
			});
	};
	
	
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.container {
    background: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 400px;
  margin:auto;
}

.form-header {
    text-align: center;
    margin-bottom: 20px;
}

.form-icon {
    width: 50px;
    height: 50px;
    display: block;
    margin: 0 auto 10px;
}

h2 {
    color: #333;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    color: #333;
}

.form-group input,
.form-group select,
.form-group textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.form-group textarea {
    resize: vertical;
    height: 100px;
}

.form-group button {
    width: 100%;
    padding: 10px;
    background-color: #176B87;
    border: none;
    border-radius: 4px;
    color: #fff;
    font-size: 16px;
    cursor: pointer;
}

.form-group button:hover {
    background-color: #04364A;
}

@media (max-width: 480px) {
    .container {
        padding: 15px;
    }

    .form-group input,
    .form-group select,
    .form-group textarea {
        padding: 8px;
    }

    .form-group button {
        padding: 8px;
        font-size: 14px;
    }

    .form-icon {
        width: 40px;
        height: 40px;
    }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>add_item_image</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Add item image</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.categoryArray = [];
  var categoryList = new GlideRecord('x_1383179_tradenow_category_lookup');
	categoryList.query();
	while (categoryList.next()) {
		
		var catObj={
			name:categoryList.getValue('name'),
			sys_id:categoryList.getValue('sys_id'),
		};
		data.categoryArray.push(catObj);
		//data.categoryArray.push(categoryList.getValue('name'));
	}
	
	data.choices = [];
	var conditionList = new GlideRecord('sys_choice');
	conditionList.addQuery('name', 'x_1383179_tradenow_item_list');
	conditionList.addQuery('element', 'condition');
	conditionList.addQuery('inactive', false);
	conditionList.orderBy('sequence');
	conditionList.query();
	while (conditionList.next()) {
		var conObj = {
			value: conditionList.getValue('value'),
			label: conditionList.getValue('label')
		};
		data.choices.push(conObj);
	}

	//	console.log(data.choices);
		// console.log(data.categoryArray);
	
	if(input){
		console.log(input);
		//if(validateRegistration (input.name)){

			var grNewRegistration = new GlideRecordSecure('x_1383179_tradenow_item_list');
			grNewRegistration.initialize();
			console.log(input);
			grNewRegistration.setValue('item_name', input.item_name);

			grNewRegistration.setValue('description', input.description);
			grNewRegistration.setValue('condition', input.selectedCondition);
			grNewRegistration.setValue('category', input.selectedCategory);
			grNewRegistration.setValue('company', input.selectedCondition);
			//grNewRegistration.setValue('event', input.eventSysId);

			grNewRegistration.setValue('image', input.image);

		if(!input.comments) {
			grNewRegistration.setValue('comments', "");
		} else {
			grNewRegistration.setValue('comments', input.comments);
			}

			var userRegSysId = grNewRegistration.insert();
			//if the record is created successfully, send the success
			// message to the client, else send the error message

	//	}
		
		
		// my code
		if(input.attchSysId){
		console.log("input: " + input.attchSysId);
		var grTask = new GlideRecord('x_1383179_tradenow_item_list');
		grTask.addQuery('sys_id',userRegSysId);
		grTask.query();
		if(grTask.next()){
			grTask.setValue('image',input.attchSysId);
			grTask.update();
		}
	}

	}

	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>shyamal</sys_created_by>
        <sys_created_on>2024-06-03 06:24:14</sys_created_on>
        <sys_id>365971b183a68210edb56060ceaad3fc</sys_id>
        <sys_mod_count>70</sys_mod_count>
        <sys_name>Add item image</sys_name>
        <sys_package display_value="TradeNow" source="x_1383179_tradenow">48d5320c837d0610edb56060ceaad314</sys_package>
        <sys_policy/>
        <sys_scope display_value="TradeNow">48d5320c837d0610edb56060ceaad314</sys_scope>
        <sys_update_name>sp_widget_365971b183a68210edb56060ceaad3fc</sys_update_name>
        <sys_updated_by>shyamal</sys_updated_by>
        <sys_updated_on>2024-06-23 17:58:19</sys_updated_on>
        <template><![CDATA[<div class="container">
  <form name="registration" novalidate ng-submit="c.submitForm(registration.$valid)">
    <div class="form-header">
      <img src="icon.png" alt="Icon" class="form-icon">
      <h2>Add New Item</h2>
    </div>
    <div class="form-group" ng-class="{'has-error':registration.item_name.$invalid && c.submitted }">
      <label for="item_name">Item Name</label>
      <input type="text" ng-model="c.item_name" id="item_name" name="item_name" ng-required="true">
      <p class="help-block" ng-show="registration.item_name.$invalid && c.submitted">Field is required.</p>
    </div>
    <div class="form-group" ng-class="{'has-error':registration.description.$invalid && c.submitted }">
      <label for="description">Item Description</label>
      <textarea id="description" ng-model="c.description" name="description" rows="4" ng-required="true"></textarea>
      <p class="help-block" ng-show="registration.description.$invalid && c.submitted">Field is required.</p>
    </div>
    <div class="form-group" ng-class="{ 'has-error' :registration.condition.$invalid && c.submitted }">
      <div class="select-dropdown">
        <label for="description">Item Condition</label>
        <!-- <select name="condition" ng-model="c.selectedCondition" ng-options="condition.value for condition in data.choices" ng-required="true">
                      <option value="">Select Condition</option>
                    </select>-->
        <select name="condition" ng-model="c.selectedCondition" ng-options="condition.value as condition.label for condition in data.choices" ng-required="true">
          <option value="">Select Condition</option>
        </select>


        <p class="help-block" ng-show="registration.condition.$invalid && c.submitted">Field is required.</p>
      </div>
    </div>
    <div class="form-group" ng-class="{ 'has-error' :registration.category.$invalid && c.submitted }">
      <div class="select-dropdown">
        <label for="description">Item Category</label>
        <!--<select name="category" ng-model="c.selectedCategory" ng-options="category.name for category in data.categoryArray" ng-required="true">
                      <option value="">Select Category</option>
                    </select>-->
        <select name="category" ng-model="c.selectedCategory" ng-options="category.sys_id as category.name for category in data.categoryArray" ng-required="true">
          <option value="">Select Category</option>
        </select>

        <p class="help-block" ng-show="registration.category.$invalid && c.submitted">Field is required.</p>
      </div>
    </div>
    <div class="form-group">
      <label for="item-image">Upload Image</label>
      <input type="file" id="fileToUpload" multiple onchange="angular.element(this).scope().setFiles(this)"/>
    </div>
    <div class="form-group">
      <button type="submit" ng-click="uploadFiles()" value="Upload">Add Item</button>
    </div>
  </form>
</div>

]]></template>
    </sp_widget>
</record_update>
