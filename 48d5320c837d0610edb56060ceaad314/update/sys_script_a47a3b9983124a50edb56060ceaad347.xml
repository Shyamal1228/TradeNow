<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1383179_tradenow_item_list</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1383179_tradenow_item_list">statusCHANGESTOclaimed^EQ<item display_value="Claimed" endquery="false" field="status" goto="false" newquery="false" operator="CHANGESTO" or="false" value="claimed"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Add points when state changes to claimed</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// This is a Script Include function that executes when a certain rule is triggered.
// It adds 50 points to a user's 'u_points' field in the 'sys_user' table when the rule is executed.

// The function signature indicates that it receives two parameters: current and previous.
// 'current' represents the current GlideRecord object, and 'previous' is null when executed asynchronously.

(function executeRule(current, previous /*null when async*/) {
    // Create a new GlideRecord instance for the 'sys_user' table
    var userGr = new GlideRecord('sys_user');

    // Add a query to find the user record with the same sys_id as the 'claimer' field in the current record
    userGr.addQuery('sys_id', current.getValue('claimer'));
    userGr.query();

    // If a matching user record is found
    if (userGr.next()) {
        // Increment the 'u_points' field by 50
        userGr.u_points += 50;

        // Update the user record
        userGr.update();
    }

    // Add an informational message to the system log
    //gs.addInfoMessage('Points added to claimer');
})(current, previous); // Call the function with the 'current' and 'previous' parameters
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jagriti</sys_created_by>
        <sys_created_on>2024-05-20 16:17:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a47a3b9983124a50edb56060ceaad347</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Add points when state changes to claimed</sys_name>
        <sys_overrides/>
        <sys_package display_value="TradeNow" source="x_1383179_tradenow">48d5320c837d0610edb56060ceaad314</sys_package>
        <sys_policy/>
        <sys_scope display_value="TradeNow">48d5320c837d0610edb56060ceaad314</sys_scope>
        <sys_update_name>sys_script_a47a3b9983124a50edb56060ceaad347</sys_update_name>
        <sys_updated_by>shyamal</sys_updated_by>
        <sys_updated_on>2024-07-11 09:56:14</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=a47a3b9983124a50edb56060ceaad347"/>
</record_update>
