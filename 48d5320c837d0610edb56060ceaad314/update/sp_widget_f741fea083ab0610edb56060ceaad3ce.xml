<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

  // Fetch comments for the current item
  c.server.get({
    item_id: $sp.getParameter('sys_id')
  }).then(function(response) {
    c.data.comments = response.data.comments;
  });

  c.newComment = '';

  c.addComment = function() {
    if (c.newComment) {
      c.server.update({
        action: 'add_comment',
        item_id: $sp.getParameter('sys_id'),
        text: c.newComment
      }).then(function(response) {
        c.data.comments.push({
          user: { name: g_user.userName },
          text: c.newComment,
          sys_created_on: new Date().toISOString()
        });
        c.newComment = '';
      });
    }
  };
})();
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>test_comment</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>test comment</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  if (input && input.action === 'add_comment') {
    var gr = new GlideRecord('x_1383179_tradenow_item_list');
    if (gr.get(input.item_id)) {
      gr.comments = input.text;
      gr.update();
    }
  }

  var comments = [];
  var gr = new GlideRecord('x_1383179_tradenow_item_list');
  if (gr.get(options.item_id || input.item_id)) {
    gr.comments.toString().split('\n').forEach(function(comment) {
      if (comment) {
        var parts = comment.split(';');
        comments.push({
          user: { name: parts[0] },
          text: parts.slice(1).join(';'),
          sys_created_on: parts[parts.length - 1]
        });
      }
    });
  }

  data.comments = comments;
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>jagriti</sys_created_by>
        <sys_created_on>2024-07-19 06:19:04</sys_created_on>
        <sys_id>f741fea083ab0610edb56060ceaad3ce</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>test comment</sys_name>
        <sys_package display_value="TradeNow" source="x_1383179_tradenow">48d5320c837d0610edb56060ceaad314</sys_package>
        <sys_policy/>
        <sys_scope display_value="TradeNow">48d5320c837d0610edb56060ceaad314</sys_scope>
        <sys_update_name>sp_widget_f741fea083ab0610edb56060ceaad3ce</sys_update_name>
        <sys_updated_by>jagriti</sys_updated_by>
        <sys_updated_on>2024-07-19 06:20:31</sys_updated_on>
        <template><![CDATA[<div>
  <h2>Comments</h2>
  <div ng-repeat="comment in c.data.comments">
    <strong>{{comment.user.name}}</strong>: {{comment.text}}
    <br><small>{{comment.sys_created_on}}</small>
    <hr>
  </div>
  <textarea ng-model="c.newComment" placeholder="Add a comment..."></textarea>
  <button ng-click="c.addComment()">Submit</button>
</div>
]]></template>
    </sp_widget>
</record_update>
